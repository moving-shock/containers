name: 'Image Build: Backstage TechDocs'

on:
  push:
    branches:
      - main
    paths:
      - 'backstage-techdocs/**'
      - '.github/workflows/backstage-techdocs.yml'

permissions: read-all

jobs:
  build-upload:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v4
      -
        name: Read VERSION file and extract version
        id: get_version
        run: echo "version=$(tail -n +2 ./backstage-techdocs/VERSION | head -n 1)" >> "$GITHUB_OUTPUT"
      - name: Output version
        id: output_version
        run: echo "Version [${{ steps.get_version.outputs.version }}]"
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/moving-shock/backstage-techdocs
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.get_version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ steps.get_version.outputs.version }}
            type=semver,pattern={{major}},value=v${{ steps.get_version.outputs.version }}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      -
        name: Build Image and Upload to Local Registry
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./backstage-techdocs
          file: ./backstage-techdocs/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: 'localhost:5000/moving-shock/backstage-techdocs:test'
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Grype scan image
        id: grype_scan
        uses: anchore/scan-action@v5
        with:
          image: 'localhost:5000/moving-shock/backstage-techdocs:test'
          output-format: sarif
          only-fixed: true
          severity-cutoff: critical
      - name: Inspect action SARIF report
        run: cat ${{ steps.grype_scan.outputs.sarif }}
      - name: Upload Grype scan SARIF report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.grype_scan.outputs.sarif }}          
      - name: Test image
        run: |
          docker run --rm localhost:5000/moving-shock/backstage-techdocs:test
      - name: Push Image
        id: docker_push
        uses: docker/build-push-action@v6
        with:
          context: ./backstage-techdocs
          file: ./backstage-techdocs/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
